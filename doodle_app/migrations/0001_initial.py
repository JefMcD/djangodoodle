# Generated by Django 4.2.5 on 2025-07-25 12:12

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('firstname', models.CharField(max_length=16)),
                ('lastname', models.CharField(max_length=16)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('password', models.CharField(max_length=128)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='icons_category')),
            ],
        ),
        migrations.CreateModel(
            name='DonationLink',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('platform', models.CharField(max_length=50)),
                ('url', models.URLField(max_length=2083)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Image_API',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('source_name', models.CharField(choices=[('sketch_draw_doodle', 'Sketch Draw Doodle'), ('unsplash', 'Unsplash'), ('public_domain_pictures', 'Public Domain Pictures'), ('pixabay', 'Pixabay'), ('gratisography', 'Gratisography'), ('user_pics', 'User Upload')], max_length=45)),
                ('source_url', models.URLField()),
                ('api_key', models.CharField(max_length=255)),
                ('api_pass', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Music',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('music_file', models.FileField(upload_to='music/')),
                ('description', models.TextField(blank=True, null=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='icons_music')),
            ],
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(upload_to='pictures')),
                ('hotlink_url', models.URLField()),
                ('photographer', models.CharField(blank=True, max_length=100, null=True)),
                ('is_premium', models.BooleanField(default=False)),
                ('is_ai', models.BooleanField(default=False)),
                ('category_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pictures', to='doodle_app.category')),
            ],
        ),
        migrations.CreateModel(
            name='Picture_Set',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('saved_at', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category_fk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='doodle_app.category')),
            ],
        ),
        migrations.CreateModel(
            name='Practice_Mode',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('mode_name', models.CharField(choices=[('warm_up', 'Warm-Up'), ('doodle_dash', 'Doodle Dash'), ('katasketch', 'Katasketch')], max_length=20)),
                ('duration_sec', models.IntegerField(help_text='Total duration of this mode in seconds')),
            ],
        ),
        migrations.CreateModel(
            name='Practice_Mode_m2m',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture_set_fk', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='unused4', to='doodle_app.picture_set')),
                ('practice_mode_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unused2', to='doodle_app.practice_mode')),
            ],
        ),
        migrations.CreateModel(
            name='SocialMediaLink',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('platform', models.CharField(max_length=50)),
                ('url', models.URLField(max_length=2083)),
                ('icon', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tagname', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='User_Profile',
            fields=[
                ('id', models.AutoField(db_index=True, primary_key=True, serialize=False)),
                ('bio', models.TextField(blank=True, null=True)),
                ('caption', models.CharField(blank=True, max_length=50, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='user_avatars')),
                ('is_premium', models.BooleanField(default=False)),
                ('dropped_pics_m2m', models.ManyToManyField(blank=True, related_name='users_who_dropped_set', to='doodle_app.picture')),
                ('favorite_pics_m2m', models.ManyToManyField(blank=True, related_name='users_who_faved_set', to='doodle_app.picture')),
                ('user_id_121', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='icons_subcategory')),
                ('description', models.TextField(blank=True, null=True)),
                ('category_fk', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='doodle_app.category')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('music_fk', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='doodle_app.music')),
                ('practice_mode_m2m', models.ManyToManyField(through='doodle_app.Practice_Mode_m2m', to='doodle_app.practice_mode')),
                ('user_profile_fk', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='doodle_app.user_profile')),
            ],
        ),
        migrations.CreateModel(
            name='Practice_Time',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('durations_secs', models.IntegerField(help_text='The total duration of the practice')),
                ('is_freestyle', models.BooleanField(default=False)),
                ('label', models.CharField(blank=True, max_length=45, null=True)),
                ('practice_mode_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='set_of_times', to='doodle_app.practice_mode')),
            ],
        ),
        migrations.AddField(
            model_name='practice_mode_m2m',
            name='practice_time_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unused3', to='doodle_app.practice_time'),
        ),
        migrations.AddField(
            model_name='practice_mode_m2m',
            name='session_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unused1', to='doodle_app.session'),
        ),
        migrations.CreateModel(
            name='Picture_Set_m2m',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sequence_pos', models.IntegerField()),
                ('skipped', models.BooleanField(default=False)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('shown_at', models.DateTimeField(blank=True, null=True)),
                ('picture_set_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='doodle_app.picture_set')),
                ('pictures_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='doodle_app.picture')),
            ],
            options={
                'unique_together': {('picture_set_fk', 'sequence_pos'), ('picture_set_fk', 'pictures_fk')},
            },
        ),
        migrations.AddField(
            model_name='picture_set',
            name='picture_Set_m2m',
            field=models.ManyToManyField(through='doodle_app.Picture_Set_m2m', to='doodle_app.picture'),
        ),
        migrations.AddField(
            model_name='picture_set',
            name='subcategories_m2m',
            field=models.ManyToManyField(to='doodle_app.subcategory'),
        ),
        migrations.AddField(
            model_name='picture',
            name='picTags_m2m',
            field=models.ManyToManyField(blank=True, to='doodle_app.tag'),
        ),
        migrations.AddField(
            model_name='picture',
            name='picture_api_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='doodle_app.image_api'),
        ),
        migrations.AddField(
            model_name='picture',
            name='subcategory_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pictures', to='doodle_app.subcategory'),
        ),
        migrations.CreateModel(
            name='Drill',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('number_of_pics', models.IntegerField(help_text='the number of pics to be displayed')),
                ('display_time', models.IntegerField(help_text='the number of seconds a picture is displayed')),
                ('step_order', models.IntegerField(help_text='The position od this squence in the order')),
                ('practice_time_fk', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='doodle_app.practice_time')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='practice_mode_m2m',
            unique_together={('session_fk', 'practice_mode_fk')},
        ),
    ]
